"""
Django settings for cloud_snitch_web project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{ cloud_snitch_web_secret_key }}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = {{ cloud_snitch_web_debug }}

ALLOWED_HOSTS = [
{% for host in cloud_snitch_web_allowed_hosts %}
    '{{ host }}',
{% endfor %}
]


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',
    'neo4jdriver',
    'web.apps.WebConfig',
    'common.apps.CommonConfig',
    'api.apps.ApiConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cloud_snitch_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cloud_snitch_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),
    }
}

NEO4J = {
    'username': "{{ cloud_snitch_web_neo4j_username }}",
    'password': "{{ cloud_snitch_web_neo4j_password }}",
    'uri': "{{ cloud_snitch_web_neo4j_uri }}",
{% if cloud_snitch_web_neo4j_max_connection_lifetime is defined %}
    'max_connection_lifetime':  {{ cloud_snitch_web_neo4j_max_connection_lifetime }},
{% endif %}
{% if cloud_snitch_web_neo4j_max_connection_pool_size is defined %}
    'max_connection_pool_size': {{ cloud_snitch_web_neo4j_max_connection_pool_size }},
{% endif %}
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '{{ cloud_snitch_web_static_root }}'

CELERY_RESULT_BACKEND = '{{ cloud_snitch_web_celery_result_backend }}'
CELERY_BROKER_URL = '{{ cloud_snitch_web_celery_broker_url }}'
CELERY_BROKER_TRANSPORT_OPTIONS = {{ cloud_snitch_web_celery_broker_transport_options }}

CACHES = {
    'default': {
        'BACKEND': '{{ cloud_snitch_web_cache_backend }}',
        'LOCATION': '{{ cloud_snitch_web_cache_location }}',
        'TIMEOUT': {{ cloud_snitch_web_cache_timeout }},
        'KEY_PREFIX': '{{ cloud_snitch_web_cache_key_prefix }}',
        'OPTIONS': {
{% for name, value in cloud_snitch_web_cache_options.items() %}
            '{{ name }}': '{{ value }}',
{% endfor %}
        },
    }
}

CSRF_COOKIE_NAME = '{{ cloud_snitch_web_csrf_cookie_name }}'

DEFAULT_CACHE_TIMEOUT = 30


LOGGING = {
    'version': 1,
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console']
        },
        'api': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'neo4jdriver': {
            'handlers': ['console'],
            'level': 'DEBUG'
        },
        'api.query': {
            'handlers': ['console'],
            'level': 'INFO'
        },
        'neo4j': {
            'level': 'ERROR'
        }
    }
}

LOGIN_URL = '{{ cloud_snitch_web_login_url }}'
LOGIN_REDIRECT_URL = '{{ cloud_snitch_web_login_redirect_url }}'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}
